let o = {}, c = Object.getPrototypeOf, a = o.toString, n = o.hasOwnProperty, l = n.toString, i = l.call(Object);
const s = (e) => {
  let t, r;
  return !e || a.call(e) !== "[object Object]" ? !1 : (t = c(e), t ? (r = n.call(t, "constructor") && t.constructor, typeof r == "function" && l.call(r) === i) : !0);
};
export {
  s as default
};
